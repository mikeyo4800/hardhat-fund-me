{
  "address": "0x0FEf6709C8D974A7Ad2377590C93Bd63E97649D2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x467c258c43fc347c9bee71566e47536826e17beb2540cdd56b0e4e8e1cb015f4",
  "receipt": {
    "to": null,
    "from": "0xf77D2DB1DD8E2a91882b1ff8EF85A38664550A46",
    "contractAddress": "0x0FEf6709C8D974A7Ad2377590C93Bd63E97649D2",
    "transactionIndex": 15,
    "gasUsed": "861656",
    "logsBloom": "0x
    "blockHash": "0x35f65913ac040d82021d48033edfe067162e7f68a2ba283a7b7d75c052bb3073",
    "transactionHash": "0x467c258c43fc347c9bee71566e47536826e17beb2540cdd56b0e4e8e1cb015f4",
    "logs": [],
    "blockNumber": 3240364,
    "cumulativeGasUsed": "4316140",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "f25160a80eee96d1b3623abd47729440",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.18;\\n\\nimport \\\"./PriceConverter.sol\\\";\\ncontract FundMe{\\n\\n    using PriceConverter for uint256;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress){\\n        owner = msg.sender;\\n\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n\\n    }\\n\\n    function fund() public payable{\\n\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"Didn't send enough\\\");\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n\\n    }\\n\\n\\n    function withdraw() public onlyOwner {\\n\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n\\n        }\\n        // resseting array\\n        funders = new address[](0); // arg is number of objects to start in array (0) - 0 objects, (1) - 1 object, (2) - 2 objects\\n\\n        // transfer\\n        //payable(msg.sender).transfer(address(this).balance); // payable(msg.sender) -- changes address to payable,  address(this) -- accesses the adress of this smart contract\\n\\n        // send\\n        //bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //require(sendSuccess, \\\"Send failed\\\"); // need require statement to revert failed transfer of money -- transfer() automatically reverts if failed\\n\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Send Failed!\\\");\\n\\n    }\\n\\n    modifier onlyOwner {\\n        \\n        require(msg.sender == owner, \\\"Sender is not owner\\\");\\n        _;\\n    \\n    }\\n\\n    receive() external payable{\\n        fund();\\n    }\\n\\n    fallback() external payable{\\n        fund();\\n    }\\n}\",\"keccak256\":\"0x837f62f1a6e2feb0534050d897771336f0400c3c6ad2d86ec2e10a92160e5dcd\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter{\\n    \\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n\\n        \\n        //abi\\n        //address 0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer*1e10);\\n\\n\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed ) internal view returns(uint256){\\n\\n\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUsd;\\n\\n    }\\n}\",\"keccak256\":\"0xd461ff1f625d880225db8a3dba0ede3f9dcc3cb1ad81b394e3b24f784fb9a37f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f23380380610f238339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610dca806101596000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a4565b61051d565b6040516100d891906107ea565b60405180910390f35b3480156100ed57600080fd5b506100f6610535565b60405161010391906107ea565b60405180910390f35b34801561011857600080fd5b50610121610542565b60405161012e9190610864565b60405180910390f35b34801561014357600080fd5b5061014c610568565b604051610159919061088e565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108d5565b61058e565b6040516101a0919061088e565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cd90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095f565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610362576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610359906109cb565b60405180910390fd5b60005b60008054905081101561040d576000808281548110610387576103866109eb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040590610a49565b915050610365565b50600067ffffffffffffffff81111561042957610428610a91565b5b6040519080825280602002602001820160405280156104575781602001602082028036833780820191505090505b506000908051906020019061046d92919061069a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049490610af1565b60006040518083038185875af1925050503d80600081146104d1576040519150601f19603f3d011682016040523d82523d6000602084013e6104d6565b606091505b505090508061051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610b52565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818154811061059e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d983610609565b90506000670de0b6b3a764000085836105f29190610b72565b6105fc9190610be3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b9190610ca1565b5050509150506402540be400816106929190610d1c565b915050919050565b828054828255906000526020600020908101928215610713579160200282015b828111156107125782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ba565b5b5090506107209190610724565b5090565b5b8082111561073d576000816000905550600101610725565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077182610746565b9050919050565b61078181610766565b811461078c57600080fd5b50565b60008135905061079e81610778565b92915050565b6000602082840312156107ba576107b9610741565b5b60006107c88482850161078f565b91505092915050565b6000819050919050565b6107e4816107d1565b82525050565b60006020820190506107ff60008301846107db565b92915050565b6000819050919050565b600061082a61082561082084610746565b610805565b610746565b9050919050565b600061083c8261080f565b9050919050565b600061084e82610831565b9050919050565b61085e81610843565b82525050565b60006020820190506108796000830184610855565b92915050565b61088881610766565b82525050565b60006020820190506108a3600083018461087f565b92915050565b6108b2816107d1565b81146108bd57600080fd5b50565b6000813590506108cf816108a9565b92915050565b6000602082840312156108eb576108ea610741565b5b60006108f9848285016108c0565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610949601283610902565b915061095482610913565b602082019050919050565b600060208201905081810360008301526109788161093c565b9050919050565b7f53656e646572206973206e6f74206f776e657200000000000000000000000000600082015250565b60006109b5601383610902565b91506109c08261097f565b602082019050919050565b600060208201905081810360008301526109e4816109a8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a54826107d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a8657610a85610a1a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610adb600083610ac0565b9150610ae682610acb565b600082019050919050565b6000610afc82610ace565b9150819050919050565b7f53656e64204661696c6564210000000000000000000000000000000000000000600082015250565b6000610b3c600c83610902565b9150610b4782610b06565b602082019050919050565b60006020820190508181036000830152610b6b81610b2f565b9050919050565b6000610b7d826107d1565b9150610b88836107d1565b9250828202610b96816107d1565b91508282048414831517610bad57610bac610a1a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bee826107d1565b9150610bf9836107d1565b925082610c0957610c08610bb4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3381610c14565b8114610c3e57600080fd5b50565b600081519050610c5081610c2a565b92915050565b6000819050919050565b610c6981610c56565b8114610c7457600080fd5b50565b600081519050610c8681610c60565b92915050565b600081519050610c9b816108a9565b92915050565b600080600080600060a08688031215610cbd57610cbc610741565b5b6000610ccb88828901610c41565b9550506020610cdc88828901610c77565b9450506040610ced88828901610c8c565b9350506060610cfe88828901610c8c565b9250506080610d0f88828901610c41565b9150509295509295909350565b6000610d2782610c56565b9150610d3283610c56565b9250828202610d4081610c56565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d7857610d77610a1a565b5b8282058414831517610d8d57610d8c610a1a565b5b509291505056fea2646970667358221220da512be6b007d920e1548c74b716a2e17c511b8cffb4abb34aabaa0f804ac5a764736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a4565b61051d565b6040516100d891906107ea565b60405180910390f35b3480156100ed57600080fd5b506100f6610535565b60405161010391906107ea565b60405180910390f35b34801561011857600080fd5b50610121610542565b60405161012e9190610864565b60405180910390f35b34801561014357600080fd5b5061014c610568565b604051610159919061088e565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108d5565b61058e565b6040516101a0919061088e565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cd90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095f565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610362576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610359906109cb565b60405180910390fd5b60005b60008054905081101561040d576000808281548110610387576103866109eb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040590610a49565b915050610365565b50600067ffffffffffffffff81111561042957610428610a91565b5b6040519080825280602002602001820160405280156104575781602001602082028036833780820191505090505b506000908051906020019061046d92919061069a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049490610af1565b60006040518083038185875af1925050503d80600081146104d1576040519150601f19603f3d011682016040523d82523d6000602084013e6104d6565b606091505b505090508061051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610b52565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818154811061059e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d983610609565b90506000670de0b6b3a764000085836105f29190610b72565b6105fc9190610be3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b9190610ca1565b5050509150506402540be400816106929190610d1c565b915050919050565b828054828255906000526020600020908101928215610713579160200282015b828111156107125782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ba565b5b5090506107209190610724565b5090565b5b8082111561073d576000816000905550600101610725565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077182610746565b9050919050565b61078181610766565b811461078c57600080fd5b50565b60008135905061079e81610778565b92915050565b6000602082840312156107ba576107b9610741565b5b60006107c88482850161078f565b91505092915050565b6000819050919050565b6107e4816107d1565b82525050565b60006020820190506107ff60008301846107db565b92915050565b6000819050919050565b600061082a61082561082084610746565b610805565b610746565b9050919050565b600061083c8261080f565b9050919050565b600061084e82610831565b9050919050565b61085e81610843565b82525050565b60006020820190506108796000830184610855565b92915050565b61088881610766565b82525050565b60006020820190506108a3600083018461087f565b92915050565b6108b2816107d1565b81146108bd57600080fd5b50565b6000813590506108cf816108a9565b92915050565b6000602082840312156108eb576108ea610741565b5b60006108f9848285016108c0565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610949601283610902565b915061095482610913565b602082019050919050565b600060208201905081810360008301526109788161093c565b9050919050565b7f53656e646572206973206e6f74206f776e657200000000000000000000000000600082015250565b60006109b5601383610902565b91506109c08261097f565b602082019050919050565b600060208201905081810360008301526109e4816109a8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a54826107d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a8657610a85610a1a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610adb600083610ac0565b9150610ae682610acb565b600082019050919050565b6000610afc82610ace565b9150819050919050565b7f53656e64204661696c6564210000000000000000000000000000000000000000600082015250565b6000610b3c600c83610902565b9150610b4782610b06565b602082019050919050565b60006020820190508181036000830152610b6b81610b2f565b9050919050565b6000610b7d826107d1565b9150610b88836107d1565b9250828202610b96816107d1565b91508282048414831517610bad57610bac610a1a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bee826107d1565b9150610bf9836107d1565b925082610c0957610c08610bb4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3381610c14565b8114610c3e57600080fd5b50565b600081519050610c5081610c2a565b92915050565b6000819050919050565b610c6981610c56565b8114610c7457600080fd5b50565b600081519050610c8681610c60565b92915050565b600081519050610c9b816108a9565b92915050565b600080600080600060a08688031215610cbd57610cbc610741565b5b6000610ccb88828901610c41565b9550506020610cdc88828901610c77565b9450506040610ced88828901610c8c565b9350506060610cfe88828901610c8c565b9250506080610d0f88828901610c41565b9150509295509295909350565b6000610d2782610c56565b9150610d3283610c56565b9250828202610d4081610c56565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d7857610d77610a1a565b5b8282058414831517610d8d57610d8c610a1a565b5b509291505056fea2646970667358221220da512be6b007d920e1548c74b716a2e17c511b8cffb4abb34aabaa0f804ac5a764736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}